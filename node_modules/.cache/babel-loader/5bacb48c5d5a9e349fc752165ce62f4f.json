{"remainingRequest":"C:\\laragon\\www\\frontend-masterline\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\frontend-masterline\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\frontend-masterline\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\frontend-masterline\\src\\layouts\\components\\vertical-nav-menu\\VerticalNavMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\laragon\\www\\frontend-masterline\\src\\layouts\\components\\vertical-nav-menu\\VerticalNavMenu.vue","mtime":1651673383159},{"path":"C:\\laragon\\www\\frontend-masterline\\babel.config.js","mtime":1570233076000},{"path":"C:\\laragon\\www\\frontend-masterline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\frontend-masterline\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\laragon\\www\\frontend-masterline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\frontend-masterline\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _slicedToArray from \"C:/laragon/www/frontend-masterline/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\nimport VNavMenuGroup from \"./VerticalNavMenuGroup.vue\";\nimport VNavMenuItem from \"./VerticalNavMenuItem.vue\";\nimport Logo from \"../Logo.vue\";\nexport default {\n  name: \"v-nav-menu\",\n  components: {\n    VNavMenuGroup: VNavMenuGroup,\n    VNavMenuItem: VNavMenuItem,\n    VuePerfectScrollbar: VuePerfectScrollbar,\n    Logo: Logo\n  },\n  props: {\n    logo: {\n      type: String\n    },\n    openGroupHover: {\n      type: Boolean,\n      default: false\n    },\n    parent: {\n      type: String\n    },\n    reduceNotRebound: {\n      type: Boolean,\n      default: true\n    },\n    navMenuItems: {\n      type: Array,\n      required: true\n    },\n    title: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      clickNotClose: false,\n      // disable close navMenu on outside click\n      isMouseEnter: false,\n      reduce: false,\n      // determines if navMenu is reduce - component property\n      showCloseButton: false,\n      // show close button in smaller devices\n      settings: {\n        // perfectScrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: 1,\n        swipeEasing: true\n      },\n      showShadowBottom: false\n    };\n  },\n  computed: {\n    activeUserInfo: function activeUserInfo() {\n      var permision = [];\n      this.$store.state.user.permissions.forEach(function (element) {\n        permision.push(element.name);\n      });\n      return permision;\n    },\n    Modular: function Modular() {\n      var _this = this;\n\n      var arreglo = [];\n      this.menuItemsUpdated.forEach(function (item) {\n        _this.activeUserInfo.includes(item.permiso) ? arreglo.push(item) : '';\n      });\n      return arreglo;\n    },\n    isGroupActive: function isGroupActive() {\n      var _this2 = this;\n\n      return function (item) {\n        var path = _this2.$route.fullPath;\n        var routeParent = _this2.$route.meta ? _this2.$route.meta.parent : undefined;\n        var open = false;\n\n        var func = function func(item) {\n          if (item.submenu) {\n            item.submenu.forEach(function (item) {\n              if (item.url && (path === item.url || routeParent === item.slug)) {\n                open = true;\n              } else if (item.submenu) {\n                func(item);\n              }\n            });\n          }\n        };\n\n        func(item);\n        return open;\n      };\n    },\n    menuItemsUpdated: function menuItemsUpdated() {\n      var clone = this.navMenuItems.slice();\n\n      var _iterator = _createForOfIteratorHelper(this.navMenuItems.entries()),\n          _step;\n\n      try {\n        var _loop = function _loop() {\n          var _step$value = _slicedToArray(_step.value, 2),\n              index = _step$value[0],\n              item = _step$value[1];\n\n          if (item.header && item.items.length && (index || 1)) {\n            var i = clone.findIndex(function (ix) {\n              return ix.header === item.header;\n            });\n\n            var _iterator2 = _createForOfIteratorHelper(item.items.entries()),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var _step2$value = _slicedToArray(_step2.value, 2),\n                    subIndex = _step2$value[0],\n                    subItem = _step2$value[1];\n\n                clone.splice(i + 1 + subIndex, 0, subItem);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n        };\n\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return clone;\n    },\n    isVerticalNavMenuActive: {\n      get: function get() {\n        return this.$store.state.isVerticalNavMenuActive;\n      },\n      set: function set(val) {\n        this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", val);\n      }\n    },\n    layoutType: function layoutType() {\n      return this.$store.state.mainLayoutType;\n    },\n    reduceButton: {\n      get: function get() {\n        return this.$store.state.reduceButton;\n      },\n      set: function set(val) {\n        this.$store.commit(\"TOGGLE_REDUCE_BUTTON\", val);\n      }\n    },\n    isVerticalNavMenuReduced: function isVerticalNavMenuReduced() {\n      return Boolean(this.reduce && this.reduceButton);\n    },\n    verticalNavMenuItemsMin: function verticalNavMenuItemsMin() {\n      return this.$store.state.verticalNavMenuItemsMin;\n    },\n    windowWidth: function windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  watch: {\n    $route: function $route() {\n      if (this.isVerticalNavMenuActive && this.showCloseButton) this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", false);\n    },\n    reduce: function reduce(val) {\n      var verticalNavMenuWidth = val ? \"reduced\" : this.$store.state.windowWidth < 1200 ? \"no-nav-menu\" : \"default\";\n      this.$store.dispatch(\"updateVerticalNavMenuWidth\", verticalNavMenuWidth);\n      setTimeout(function () {\n        window.dispatchEvent(new Event(\"resize\"));\n      }, 100);\n    },\n    layoutType: function layoutType() {\n      this.setVerticalNavMenuWidth();\n    },\n    reduceButton: function reduceButton() {\n      this.setVerticalNavMenuWidth();\n    },\n    windowWidth: function windowWidth() {\n      this.setVerticalNavMenuWidth();\n    }\n  },\n  methods: {\n    // handleWindowResize(event) {\n    //   this.windowWidth = event.currentTarget.innerWidth;\n    //   this.setVerticalNavMenuWidth()\n    // },\n    onSwipeLeft: function onSwipeLeft() {\n      if (this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = false;\n    },\n    onSwipeAreaSwipeRight: function onSwipeAreaSwipeRight() {\n      if (!this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = true;\n    },\n    psSectionScroll: function psSectionScroll() {\n      this.showShadowBottom = this.$refs.verticalNavMenuPs.$el.scrollTop > 0 ? true : false;\n    },\n    mouseEnter: function mouseEnter() {\n      if (this.reduce) this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", false);\n      this.isMouseEnter = true;\n    },\n    mouseLeave: function mouseLeave() {\n      if (this.reduce) this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", true);\n      this.isMouseEnter = false;\n    },\n    setVerticalNavMenuWidth: function setVerticalNavMenuWidth() {\n      if (this.windowWidth > 1200) {\n        if (this.layoutType === \"vertical\") {\n          // Set reduce\n          this.reduce = this.reduceButton ? true : false; // Open NavMenu\n\n          this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", true); // Set Menu Items Only Icon Mode\n\n          var verticalNavMenuItemsMin = this.reduceButton && !this.isMouseEnter ? true : false;\n          this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", verticalNavMenuItemsMin); // Menu Action buttons\n\n          this.clickNotClose = true;\n          this.showCloseButton = false;\n          var verticalNavMenuWidth = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\";\n          this.$store.dispatch(\"updateVerticalNavMenuWidth\", verticalNavMenuWidth);\n          return;\n        }\n      } // Close NavMenu\n\n\n      this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", false); // Reduce button\n\n      if (this.reduceButton) this.reduce = false; // Menu Action buttons\n\n      this.showCloseButton = true;\n      this.clickNotClose = false; // Update NavMenu Width\n\n      this.$store.dispatch(\"updateVerticalNavMenuWidth\", \"no-nav-menu\"); // Remove Only Icon in Menu\n\n      this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", false); // if(this.layoutType === 'vertical' || (this.layoutType === 'horizontal' && this.windowWidth < 1200))\n      // if (this.windowWidth < 1200) {\n      //   // Close NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\n      //   // Reduce button\n      //   if (this.reduceButton) this.reduce = false\n      //   // Menu Action buttons\n      //   this.showCloseButton = true\n      //   this.clickNotClose   = false\n      //   // Update NavMenu Width\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\n      //   // Remove Only Icon in Menu\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\n      // } else {\n      //   // Set reduce\n      //   this.reduce = this.reduceButton ? true : false\n      //   // Open NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\n      //   // Set Menu Items Only Icon Mode\n      //   const verticalNavMenuItemsMin = (this.reduceButton && !this.isMouseEnter) ? true : false\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin)\n      //   // Menu Action buttons\n      //   this.clickNotClose   = true\n      //   this.showCloseButton = false\n      //   const verticalNavMenuWidth   = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\"\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\n      // }\n    },\n    toggleReduce: function toggleReduce(val) {\n      this.reduceButton = val;\n      this.setVerticalNavMenuWidth();\n    }\n  },\n  mounted: function mounted() {\n    this.setVerticalNavMenuWidth();\n  }\n};",{"version":3,"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","names":["VuePerfectScrollbar","VNavMenuGroup","VNavMenuItem","Logo","name","components","props","logo","type","String","openGroupHover","Boolean","default","parent","reduceNotRebound","navMenuItems","Array","required","title","data","clickNotClose","isMouseEnter","reduce","showCloseButton","settings","maxScrollbarLength","wheelSpeed","swipeEasing","showShadowBottom","computed","activeUserInfo","permision","$store","state","user","permissions","forEach","push","element","Modular","arreglo","menuItemsUpdated","item","includes","permiso","isGroupActive","path","$route","fullPath","routeParent","meta","undefined","open","func","submenu","url","slug","clone","slice","entries","index","header","items","length","i","findIndex","ix","subIndex","subItem","splice","isVerticalNavMenuActive","get","set","val","commit","layoutType","mainLayoutType","reduceButton","isVerticalNavMenuReduced","verticalNavMenuItemsMin","windowWidth","watch","verticalNavMenuWidth","dispatch","setTimeout","window","dispatchEvent","Event","setVerticalNavMenuWidth","methods","onSwipeLeft","onSwipeAreaSwipeRight","psSectionScroll","$refs","verticalNavMenuPs","$el","scrollTop","mouseEnter","mouseLeave","toggleReduce","mounted"],"sourceRoot":"src/layouts/components/vertical-nav-menu","sources":["C:/laragon/www/frontend-masterline/src/layouts/components/vertical-nav-menu/VerticalNavMenu.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\nimport VNavMenuGroup from \"./VerticalNavMenuGroup.vue\";\nimport VNavMenuItem from \"./VerticalNavMenuItem.vue\";\n\nimport Logo from \"../Logo.vue\";\n\nexport default {\n  name: \"v-nav-menu\",\n  components: {\n    VNavMenuGroup,\n    VNavMenuItem,\n    VuePerfectScrollbar,\n    Logo,\n  },\n  props: {\n    logo: { type: String },\n    openGroupHover: { type: Boolean, default: false },\n    parent: { type: String },\n    reduceNotRebound: { type: Boolean, default: true },\n    navMenuItems: { type: Array, required: true },\n    title: { type: String },\n  },\n  data: () => ({\n    clickNotClose: false, // disable close navMenu on outside click\n    isMouseEnter: false,\n    reduce: false, // determines if navMenu is reduce - component property\n    showCloseButton: false, // show close button in smaller devices\n    settings: {\n      // perfectScrollbar settings\n      maxScrollbarLength: 60,\n      wheelSpeed: 1,\n      swipeEasing: true,\n    },\n    showShadowBottom: false,\n  }),\n  computed: {\n    activeUserInfo() {\n      var permision = [];\n      this.$store.state.user.permissions.forEach(element => {\n        permision.push(element.name);\n      });\n\n      return permision;\n    },\n    Modular() {\n      let arreglo = [];\n        this.menuItemsUpdated.forEach((item) => {\n        this.activeUserInfo.includes(item.permiso) ? arreglo.push(item) : '';\n      });\n      return arreglo;\n    },\n    isGroupActive() {\n      return (item) => {\n        const path = this.$route.fullPath;\n        const routeParent = this.$route.meta\n          ? this.$route.meta.parent\n          : undefined;\n        let open = false;\n\n        let func = (item) => {\n          if (item.submenu) {\n            item.submenu.forEach((item) => {\n              if (\n                item.url &&\n                (path === item.url || routeParent === item.slug)\n              ) {\n                open = true;\n              } else if (item.submenu) {\n                func(item);\n              }\n            });\n          }\n        };\n        func(item);\n        return open;\n      };\n    },\n    menuItemsUpdated() {\n      let clone = this.navMenuItems.slice();\n      for (let [index, item] of this.navMenuItems.entries()) {\n        if (item.header && item.items.length && (index || 1)) {\n          let i = clone.findIndex((ix) => ix.header === item.header);\n          for (let [subIndex, subItem] of item.items.entries()) {\n            clone.splice(i + 1 + subIndex, 0, subItem);\n          }\n        }\n      }\n\n      return clone;\n    },\n    isVerticalNavMenuActive: {\n      get() {\n        return this.$store.state.isVerticalNavMenuActive;\n      },\n      set(val) {\n        this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", val);\n      },\n    },\n    layoutType() {\n      return this.$store.state.mainLayoutType;\n    },\n    reduceButton: {\n      get() {\n        return this.$store.state.reduceButton;\n      },\n      set(val) {\n        this.$store.commit(\"TOGGLE_REDUCE_BUTTON\", val);\n      },\n    },\n    isVerticalNavMenuReduced() {\n      return Boolean(this.reduce && this.reduceButton);\n    },\n    verticalNavMenuItemsMin() {\n      return this.$store.state.verticalNavMenuItemsMin;\n    },\n    windowWidth() {\n      return this.$store.state.windowWidth;\n    },\n  },\n  watch: {\n    $route() {\n      if (this.isVerticalNavMenuActive && this.showCloseButton)\n        this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", false);\n    },\n    reduce(val) {\n      const verticalNavMenuWidth = val\n        ? \"reduced\"\n        : this.$store.state.windowWidth < 1200\n        ? \"no-nav-menu\"\n        : \"default\";\n      this.$store.dispatch(\"updateVerticalNavMenuWidth\", verticalNavMenuWidth);\n\n      setTimeout(function () {\n        window.dispatchEvent(new Event(\"resize\"));\n      }, 100);\n    },\n    layoutType() {\n      this.setVerticalNavMenuWidth();\n    },\n    reduceButton() {\n      this.setVerticalNavMenuWidth();\n    },\n    windowWidth() {\n      this.setVerticalNavMenuWidth();\n    },\n  },\n  methods: {\n    // handleWindowResize(event) {\n    //   this.windowWidth = event.currentTarget.innerWidth;\n    //   this.setVerticalNavMenuWidth()\n    // },\n    onSwipeLeft() {\n      if (this.isVerticalNavMenuActive && this.showCloseButton)\n        this.isVerticalNavMenuActive = false;\n    },\n    onSwipeAreaSwipeRight() {\n      if (!this.isVerticalNavMenuActive && this.showCloseButton)\n        this.isVerticalNavMenuActive = true;\n    },\n    psSectionScroll() {\n      this.showShadowBottom =\n        this.$refs.verticalNavMenuPs.$el.scrollTop > 0 ? true : false;\n    },\n    mouseEnter() {\n      if (this.reduce)\n        this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", false);\n      this.isMouseEnter = true;\n    },\n    mouseLeave() {\n      if (this.reduce)\n        this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", true);\n      this.isMouseEnter = false;\n    },\n    setVerticalNavMenuWidth() {\n      if (this.windowWidth > 1200) {\n        if (this.layoutType === \"vertical\") {\n          // Set reduce\n          this.reduce = this.reduceButton ? true : false;\n\n          // Open NavMenu\n          this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", true);\n\n          // Set Menu Items Only Icon Mode\n          const verticalNavMenuItemsMin =\n            this.reduceButton && !this.isMouseEnter ? true : false;\n          this.$store.commit(\n            \"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\",\n            verticalNavMenuItemsMin\n          );\n\n          // Menu Action buttons\n          this.clickNotClose = true;\n          this.showCloseButton = false;\n\n          const verticalNavMenuWidth = this.isVerticalNavMenuReduced\n            ? \"reduced\"\n            : \"default\";\n          this.$store.dispatch(\n            \"updateVerticalNavMenuWidth\",\n            verticalNavMenuWidth\n          );\n\n          return;\n        }\n      }\n\n      // Close NavMenu\n      this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", false);\n\n      // Reduce button\n      if (this.reduceButton) this.reduce = false;\n\n      // Menu Action buttons\n      this.showCloseButton = true;\n      this.clickNotClose = false;\n\n      // Update NavMenu Width\n      this.$store.dispatch(\"updateVerticalNavMenuWidth\", \"no-nav-menu\");\n\n      // Remove Only Icon in Menu\n      this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", false);\n\n      // if(this.layoutType === 'vertical' || (this.layoutType === 'horizontal' && this.windowWidth < 1200))\n      // if (this.windowWidth < 1200) {\n\n      //   // Close NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\n\n      //   // Reduce button\n      //   if (this.reduceButton) this.reduce = false\n\n      //   // Menu Action buttons\n      //   this.showCloseButton = true\n      //   this.clickNotClose   = false\n\n      //   // Update NavMenu Width\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\n\n      //   // Remove Only Icon in Menu\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\n\n      // } else {\n\n      //   // Set reduce\n      //   this.reduce = this.reduceButton ? true : false\n\n      //   // Open NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\n\n      //   // Set Menu Items Only Icon Mode\n      //   const verticalNavMenuItemsMin = (this.reduceButton && !this.isMouseEnter) ? true : false\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin)\n\n      //   // Menu Action buttons\n      //   this.clickNotClose   = true\n      //   this.showCloseButton = false\n\n      //   const verticalNavMenuWidth   = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\"\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\n      // }\n    },\n    toggleReduce(val) {\n      this.reduceButton = val;\n      this.setVerticalNavMenuWidth();\n    },\n  },\n  mounted() {\n    this.setVerticalNavMenuWidth();\n  },\n};\n"]}]}