{"remainingRequest":"C:\\laragon\\www\\frontend-masterline\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\frontend-masterline\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\frontend-masterline\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\frontend-masterline\\src\\components\\vx-card\\VxCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\laragon\\www\\frontend-masterline\\src\\components\\vx-card\\VxCard.vue","mtime":1573175856000},{"path":"C:\\laragon\\www\\frontend-masterline\\babel.config.js","mtime":1570233076000},{"path":"C:\\laragon\\www\\frontend-masterline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\frontend-masterline\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\laragon\\www\\frontend-masterline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\frontend-masterline\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Prism from 'vue-prism-component';\nimport _color from '@/assets/utils/color.js';\nexport default {\n  name: 'vx-card',\n  props: {\n    title: String,\n    subtitle: String,\n    actionButtons: {\n      type: Boolean,\n      default: false\n    },\n    actionButtonsColor: {\n      type: String,\n      default: \"success\"\n    },\n    codeToggler: {\n      type: Boolean,\n      default: false\n    },\n    noShadow: {\n      default: false,\n      type: Boolean\n    },\n    noRadius: {\n      default: false,\n      type: Boolean\n    },\n    cardBorder: {\n      default: false,\n      type: Boolean\n    },\n    codeLanguage: {\n      default: \"markup\",\n      type: String\n    },\n    collapseAction: {\n      default: false,\n      type: Boolean\n    },\n    refreshContentAction: {\n      default: false,\n      type: Boolean\n    },\n    removeCardAction: {\n      default: false,\n      type: Boolean\n    },\n    headerBackground: {\n      default: '',\n      type: String\n    },\n    // bodyBackground: {\n    //   default: '',\n    //   type: String\n    // },\n    // headerbackground: {\n    //   default: '',\n    //   type: String\n    // },\n    cardBackground: {\n      default: '',\n      type: String\n    },\n    contentColor: {\n      default: '',\n      type: String\n    },\n    titleColor: {\n      default: '',\n      type: String\n    },\n    subtitleColor: {\n      default: '#b8c2cc',\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      isContentCollapsed: false,\n      showCode: false,\n      maxHeight: null,\n      cardMaxHeight: null,\n      codeContainerMaxHeight: '0px',\n      tempHidden: false\n    };\n  },\n  computed: {\n    hasAction: function hasAction() {\n      return this.$slots.actions || this.actionButtons || this.collapseAction || this.refreshContentAction || this.removeCardAction || this.codeToggler;\n    },\n    hasHeader: function hasHeader() {\n      return this.hasAction || this.title || this.subtitle;\n    },\n    StyleItems: function StyleItems() {\n      return {\n        maxHeight: this.maxHeight\n      };\n    },\n    cardStyles: function cardStyles() {\n      var obj = {\n        maxHeight: this.cardMaxHeight\n      };\n      if (!_color.isColor(this.cardBackground)) obj.background = _color.getColor(this.cardBackground);\n      if (!_color.isColor(this.contentColor)) obj.color = _color.getColor(this.contentColor);\n      return obj;\n    },\n    codeContainerStyles: function codeContainerStyles() {\n      return {\n        maxHeight: this.codeContainerMaxHeight\n      };\n    },\n    cardClasses: function cardClasses() {\n      var str = ''; // Add bg class\n\n      if (_color.isColor(this.cardBackground)) {\n        str += \" bg-\".concat(this.cardBackground);\n      } // add content color\n\n\n      if (_color.isColor(this.contentColor)) {\n        str += \" text-\".concat(this.contentColor);\n      }\n\n      return str.trim();\n    },\n    titleStyles: function titleStyles() {\n      return {\n        color: _color.getColor(this.titleColor)\n      };\n    },\n    titleClasses: function titleClasses() {\n      var str = ''; // add content color\n\n      if (_color.isColor(this.titleColor)) {\n        str += \" text-\".concat(this.titleColor);\n      }\n\n      return str.trim();\n    },\n    subtitleStyles: function subtitleStyles() {\n      var obj = {};\n      if (!_color.isColor(this.subtitleColor)) obj.color = _color.getColor(this.subtitleColor);\n      return obj;\n    },\n    subtitleClasses: function subtitleClasses() {\n      var str = ''; // add content color\n\n      if (_color.isColor(this.subtitleColor)) {\n        str += \" text-\".concat(this.subtitleColor);\n      }\n\n      return str.trim();\n    }\n  },\n  methods: {\n    toggleContent: function toggleContent() {\n      var _this = this;\n\n      this.$refs.content.style.overflow = \"hidden\";\n      var scrollHeight = this.$refs.content.scrollHeight;\n\n      if (this.maxHeight == '1.5rem') {\n        this.maxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this.maxHeight = 'none';\n          _this.$refs.content.style.overflow = null;\n        }, 300);\n      } else {\n        this.maxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this.maxHeight = \"1.5rem\";\n          _this.$refs.content.style.overflow = null;\n        }, 50);\n      }\n\n      this.isContentCollapsed = !this.isContentCollapsed;\n      this.$emit(\"toggleCollapse\", this.isContentCollapsed);\n    },\n    refreshcard: function refreshcard() {\n      this.$vs.loading({\n        container: this.$refs.content,\n        scale: 0.5\n      });\n      this.tempHidden = true;\n      this.$emit(\"refresh\", this);\n    },\n    removeRefreshAnimation: function removeRefreshAnimation() {\n      var _this2 = this;\n\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      setTimeout(function () {\n        _this2.$vs.loading.close(_this2.$refs.content);\n\n        _this2.tempHidden = false;\n      }, time);\n    },\n    removeCard: function removeCard() {\n      var _this3 = this;\n\n      var scrollHeight = this.$refs.card.scrollHeight;\n      this.cardMaxHeight = \"\".concat(scrollHeight, \"px\");\n      this.$el.style.overflow = \"hidden\";\n      setTimeout(function () {\n        _this3.cardMaxHeight = \"0px\";\n      }, 50);\n      this.$emit(\"remove\");\n    },\n    toggleCode: function toggleCode() {\n      var _this4 = this;\n\n      this.tempHidden = true;\n      this.showCode = !this.showCode;\n      var scrollHeight = this.$refs.codeContainer.scrollHeight;\n\n      if (this.codeContainerMaxHeight == '0px') {\n        this.codeContainerMaxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this4.codeContainerMaxHeight = 'none';\n          _this4.tempHidden = false;\n        }, 300);\n      } else {\n        this.codeContainerMaxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this4.codeContainerMaxHeight = \"0px\";\n          _this4.tempHidden = false;\n        }, 150);\n      }\n    }\n  },\n  components: {\n    Prism: Prism\n  }\n};",{"version":3,"mappings":"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","names":["Prism","_color","name","props","title","String","subtitle","actionButtons","type","Boolean","default","actionButtonsColor","codeToggler","noShadow","noRadius","cardBorder","codeLanguage","collapseAction","refreshContentAction","removeCardAction","headerBackground","cardBackground","contentColor","titleColor","subtitleColor","data","isContentCollapsed","showCode","maxHeight","cardMaxHeight","codeContainerMaxHeight","tempHidden","computed","hasAction","$slots","actions","hasHeader","StyleItems","cardStyles","obj","isColor","background","getColor","color","codeContainerStyles","cardClasses","str","trim","titleStyles","titleClasses","subtitleStyles","subtitleClasses","methods","toggleContent","$refs","content","style","overflow","scrollHeight","setTimeout","$emit","refreshcard","$vs","loading","container","scale","removeRefreshAnimation","time","close","removeCard","card","$el","toggleCode","codeContainer","components"],"sourceRoot":"src/components/vx-card","sources":["C:/laragon/www/frontend-masterline/src/components/vx-card/VxCard.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Prism from 'vue-prism-component'\nimport _color from '@/assets/utils/color.js'\n\nexport default{\n    name: 'vx-card',\n    props: {\n        title: String,\n        subtitle: String,\n        actionButtons: {\n            type: Boolean,\n            default: false,\n        },\n        actionButtonsColor: {\n            type: String,\n            default: \"success\",\n        },\n        codeToggler: {\n            type: Boolean,\n            default: false,\n        },\n        noShadow: {\n            default: false,\n            type: Boolean,\n        },\n        noRadius: {\n            default: false,\n            type: Boolean,\n        },\n        cardBorder: {\n            default: false,\n            type: Boolean,\n        },\n        codeLanguage: {\n            default: \"markup\",\n            type: String,\n        },\n        collapseAction: {\n            default: false,\n            type: Boolean\n        },\n        refreshContentAction: {\n            default: false,\n            type: Boolean\n        },\n        removeCardAction: {\n            default: false,\n            type: Boolean\n        },\n        headerBackground: {\n          default: '',\n          type: String\n        },\n        // bodyBackground: {\n        //   default: '',\n        //   type: String\n        // },\n        // headerbackground: {\n        //   default: '',\n        //   type: String\n        // },\n        cardBackground: {\n          default: '',\n          type: String\n        },\n        contentColor: {\n          default: '',\n          type: String\n        },\n        titleColor: {\n          default: '',\n          type: String\n        },\n        subtitleColor: {\n          default: '#b8c2cc',\n          type: String\n        }\n    },\n    data() {\n        return {\n            isContentCollapsed: false,\n            showCode: false,\n            maxHeight: null,\n            cardMaxHeight: null,\n            codeContainerMaxHeight: '0px',\n            tempHidden: false,\n        }\n    },\n    computed: {\n        hasAction() {\n            return this.$slots.actions || (this.actionButtons || this.collapseAction || this.refreshContentAction || this.removeCardAction || this.codeToggler)\n        },\n        hasHeader() {\n            return this.hasAction || (this.title || this.subtitle)\n        },\n        StyleItems() {\n            return { maxHeight: this.maxHeight }\n        },\n        cardStyles() {\n            let obj = { maxHeight: this.cardMaxHeight }\n            if (!_color.isColor(this.cardBackground)) obj.background = _color.getColor(this.cardBackground)\n            if (!_color.isColor(this.contentColor)) obj.color = _color.getColor(this.contentColor)\n            return obj\n        },\n        codeContainerStyles() {\n            return { maxHeight: this.codeContainerMaxHeight }\n        },\n        cardClasses() {\n          let str = ''\n\n          // Add bg class\n          if(_color.isColor(this.cardBackground)) {\n            str += ` bg-${this.cardBackground}`\n          }\n\n          // add content color\n          if (_color.isColor(this.contentColor)){\n            str += ` text-${this.contentColor}`\n          }\n\n          return str.trim()\n        },\n        titleStyles() {\n          return {\n            color: _color.getColor(this.titleColor)\n          }\n        },\n        titleClasses() {\n          let str = ''\n\n          // add content color\n          if(_color.isColor(this.titleColor)) {\n            str += ` text-${this.titleColor}`\n          }\n\n          return str.trim()\n        },\n        subtitleStyles() {\n          let obj = {}\n          if (!_color.isColor(this.subtitleColor)) obj.color = _color.getColor(this.subtitleColor)\n\n          return obj\n        },\n        subtitleClasses() {\n          let str = ''\n\n          // add content color\n          if(_color.isColor(this.subtitleColor)) {\n            str += ` text-${this.subtitleColor}`\n          }\n\n          return str.trim()\n        },\n    },\n    methods: {\n        toggleContent() {\n            this.$refs.content.style.overflow = \"hidden\"\n            let scrollHeight = this.$refs.content.scrollHeight\n            if (this.maxHeight == '1.5rem') {\n                this.maxHeight = `${scrollHeight}px`\n                setTimeout(() => {\n                    this.maxHeight = 'none'\n                    this.$refs.content.style.overflow = null\n                }, 300)\n            } else {\n                this.maxHeight = `${scrollHeight}px`\n                setTimeout(() => {\n                    this.maxHeight = `1.5rem`\n                    this.$refs.content.style.overflow = null\n                }, 50)\n            }\n            this.isContentCollapsed = !this.isContentCollapsed\n            this.$emit(\"toggleCollapse\", this.isContentCollapsed)\n        },\n        refreshcard() {\n            this.$vs.loading({\n                container: this.$refs.content,\n                scale: 0.5,\n            })\n            this.tempHidden = true\n            this.$emit(\"refresh\", this)\n        },\n        removeRefreshAnimation(time=100) {\n            setTimeout( ()=> {\n                this.$vs.loading.close(this.$refs.content)\n                this.tempHidden = false\n            }, time)\n        },\n        removeCard() {\n            let scrollHeight = this.$refs.card.scrollHeight\n            this.cardMaxHeight = `${scrollHeight}px`\n            this.$el.style.overflow = \"hidden\"\n            setTimeout(() => {\n                this.cardMaxHeight = `0px`\n            }, 50)\n            this.$emit(\"remove\")\n        },\n        toggleCode() {\n            this.tempHidden = true\n            this.showCode = !this.showCode\n            let scrollHeight = this.$refs.codeContainer.scrollHeight\n            if (this.codeContainerMaxHeight == '0px') {\n                this.codeContainerMaxHeight = `${scrollHeight}px`\n                setTimeout(() => {\n                    this.codeContainerMaxHeight = 'none'\n                    this.tempHidden = false\n                }, 300)\n            } else {\n                this.codeContainerMaxHeight = `${scrollHeight}px`\n                setTimeout(() => {\n                    this.codeContainerMaxHeight = `0px`\n                    this.tempHidden = false\n                }, 150)\n            }\n        },\n    },\n    components: {\n        Prism,\n    }\n}\n"]}]}