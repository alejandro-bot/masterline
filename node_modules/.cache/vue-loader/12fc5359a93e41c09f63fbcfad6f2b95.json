{"remainingRequest":"C:\\laragon\\www\\frontend-masterline\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\frontend-masterline\\src\\views\\TypingTemplate.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\laragon\\www\\frontend-masterline\\src\\views\\TypingTemplate.vue","mtime":1646230855953},{"path":"C:\\laragon\\www\\frontend-masterline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\frontend-masterline\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\laragon\\www\\frontend-masterline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\frontend-masterline\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { dominio } from \"../dominio.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      listProces: {},\r\n    };\r\n  },\r\n  created() {\r\n    this.listProcess();\r\n  },\r\n  methods: {\r\n    createTemplate() {\r\n      this.$router.push(\"/panel/create-template\");\r\n    },\r\n    listProcess() {\r\n      let url = dominio.url + \"/api/mostrar-procesos\";\r\n      axios.get(url).then((res) => {\r\n        this.listProces = res.data.listProces;\r\n      });\r\n    },\r\n    deleteTemplate(id) {\r\n      let url = dominio.url + \"/api/eliminar-plantilla/\" + id;\r\n      axios\r\n        .post(url)\r\n        .then((res) => {\r\n          if (res.data.code == 200) {\r\n            toastr.success(res.data.message);\r\n            this.listProcess();\r\n          }\r\n          if (res.data.code == 500) {\r\n            toastr.error(res.data.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.errors = error.response.data.errors;\r\n        });\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["TypingTemplate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TypingTemplate.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <vs-button\r\n      class=\"buttonColor\"\r\n      color=\"primary\"\r\n      type=\"relief\"\r\n      icon=\"description\"\r\n      @click=\"createTemplate()\"\r\n      >Crear Plantilla</vs-button\r\n    >\r\n    <vs-row vs-justify=\"center\" class=\"mt-5\">\r\n      <vs-col type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n        <vs-card class=\"con-vs-cards\">\r\n          <div slot=\"header\">\r\n            <strong>\r\n              <h1 class=\"card-title text-center\">PLANTILLAS CARGADAS</h1>\r\n            </strong>\r\n          </div>\r\n          <vs-table>\r\n            <template slot=\"header\">\r\n              <h3 class=\"mb-5\">PLANTILLAS DE TIPIFICACIÓN</h3>\r\n            </template>\r\n            <template slot=\"thead\">\r\n              <vs-th> Proceso </vs-th>\r\n              <vs-th> Seguimiento </vs-th>\r\n              <vs-th> Operación </vs-th>\r\n              <vs-th> Tipo </vs-th>\r\n              <vs-th> Acciones </vs-th>\r\n            </template>\r\n            <template>\r\n              <vs-tr :key=\"index\" v-for=\"(item, index) in listProces\">\r\n                <vs-td> {{ item.process_name }} </vs-td>\r\n                <vs-td> {{ item.tracing }} </vs-td>\r\n                <vs-td> {{ item.type_of_transport.name }} </vs-td>\r\n                <vs-td> {{ item.type_of_load.name }} </vs-td>\r\n                <vs-td>\r\n                  <vs-row>\r\n                    <vs-col\r\n                      vs-type=\"flex\"\r\n                      vs-justify=\"left\"\r\n                      vs-align=\"left\"\r\n                      vs-w=\"12\"\r\n                    >\r\n                      <router-link :to=\"'/panel/update-template/' + item.id\">\r\n                        <vs-button\r\n                          class=\"mr-1 ml-1\"\r\n                          radius\r\n                          color=\"success\"\r\n                          type=\"border\"\r\n                          icon=\"edit\"\r\n                        ></vs-button>\r\n                      </router-link>\r\n                      <vs-button\r\n                        class=\"mr-1 ml-1\"\r\n                        radius\r\n                        color=\"danger\"\r\n                        type=\"border\"\r\n                        icon=\"delete_outline\"\r\n                        @click=\"deleteTemplate(item.id)\"\r\n                      ></vs-button>\r\n                    </vs-col>\r\n                  </vs-row>\r\n                </vs-td>\r\n              </vs-tr>\r\n            </template>\r\n          </vs-table>\r\n        </vs-card>\r\n      </vs-col>\r\n    </vs-row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { dominio } from \"../dominio.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      listProces: {},\r\n    };\r\n  },\r\n  created() {\r\n    this.listProcess();\r\n  },\r\n  methods: {\r\n    createTemplate() {\r\n      this.$router.push(\"/panel/create-template\");\r\n    },\r\n    listProcess() {\r\n      let url = dominio.url + \"/api/mostrar-procesos\";\r\n      axios.get(url).then((res) => {\r\n        this.listProces = res.data.listProces;\r\n      });\r\n    },\r\n    deleteTemplate(id) {\r\n      let url = dominio.url + \"/api/eliminar-plantilla/\" + id;\r\n      axios\r\n        .post(url)\r\n        .then((res) => {\r\n          if (res.data.code == 200) {\r\n            toastr.success(res.data.message);\r\n            this.listProcess();\r\n          }\r\n          if (res.data.code == 500) {\r\n            toastr.error(res.data.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.errors = error.response.data.errors;\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.con-vs-cards {\r\n  width: 100%;\r\n  height: auto;\r\n  background: transparent !important;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n  display: block;\r\n  -webkit-box-shadow: 0 4px 25px 0 rgb(0 0 0 / 10%);\r\n  box-shadow: 0 4px 25px 0 rgb(0 0 0) !important;\r\n  -webkit-transition: all 0.3s ease;\r\n  transition: all 0.3s ease;\r\n  border: 1px solid #ff6600;\r\n}\r\n.card-title {\r\n  margin-bottom: 15px;\r\n  margin-top: 15px;\r\n  color: white;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n  text-align: left;\r\n  font-size: 17px;\r\n  font-weight: 700;\r\n}\r\n.buttonColor {\r\n  background: #ff5000 !important;\r\n}\r\n</style>\r\n"]}]}